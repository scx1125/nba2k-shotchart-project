命中率逻辑

nba2k11.exe+588772 - D9 46 48              - fld dword ptr [esi+48]	//载入当前命中率预期
nba2k11.exe+588775 - 83 EC 08              - sub esp,08 { 8 }	//将esp栈地址减8
nba2k11.exe+588778 - D9 5C 24 04           - fstp dword ptr [esp+04]	//在esp-4位置压栈命中率预期
nba2k11.exe+58877C - D9 46 40              - fld dword ptr [esi+40]	//载入当前篮圈绝对距离
nba2k11.exe+58877F - D9 1C 24              - fstp dword ptr [esp]	//在esp-8位置压栈篮圈绝对距离
nba2k11.exe+588782 - 68 983BF700           - push nba2k11.exe+B73B98 { [0.00] }
nba2k11.exe+588787 - E8 F4EEFFFF           - call nba2k11.exe+587680	//调用587680处的函数

587680
载入

1410*1500


步骤：
按下z键 等一小会儿 位置改变
z键释放和坐标变化时间是同步的
其实和z键没有关系，只用循环检测即可，先检测z键抬起时间是否改变，如果改变，读取位置，

通过时间戳发现本地文件不可能有数据

我按下键盘z键 - 时间戳改变 - 位置没有改变 -> 扣篮
我按下键盘z键 - 时间戳改变 - 位置改变 -> 投篮

打板且距离特近的话是上篮 FA70 3
我按下键盘z键 - 时间戳未改变 -> 虚晃或抢断（不计入投篮位置）

corner case - 自动空中接力 防守时错按z 罚篮去除 季后赛单独统计（手动？日期）

我们的纵坐标始终是正值

存储结构
真实日期
比赛场数（按文件数计数）
上场时间，总得分，出手数，进球数，三分进球数，等等

进球类型 是否投进 进球横坐标 进球纵坐标 进球绝对距离


每场比赛记录的数据：
上场时间
得分
命中投失球数
如果可能记录比赛对阵双方以及比赛日期
前场后场区分？自动
每个球的位置戳和时间戳沾框类型

每场比赛保存为一个文件，如果有里程碑事件手动在文件末尾添加flag

待更新：
- 从配置文件读取数据存储目录 - 读取注册表
- 改进显示顺序
- 改进显示位置
- 更新Python绘图代码
- 改进头文件结构，清理无用变量函数